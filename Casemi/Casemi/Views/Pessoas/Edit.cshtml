@model Casemi.Models.Pessoas

@{
    ViewBag.Title = "Pessoas";
}

<h2>Alterar</h2>
<h4>Pessoas</h4>
<hr />

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>


<h3><small>Perfil de Relacionamento</small></h3>
@{
    Html.RenderAction("PerfilRelacionamentoPartial", "Pessoas", new { pessoaID = Model.PessoaID });
}
<br />
<br />
<h3><small>Dados Principais</small></h3>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PessoaID)

        <div class="form-group">
            @Html.LabelFor(model => model.TipoPessoa, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.DropDownList("TipoPessoa", null, "Selecione", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TipoPessoa, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-3">
                <div class="checkbox">
                    <label>
                        @Html.EditorFor(model => model.Ativo)
                        Ativo
                    </label>
                    @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-12 text-right">
                <a href="@Url.Action("Index","Pessoas",null)" class="btn btn-default">
                    <i class="glyphicon glyphicon-arrow-left"></i>
                </a> &nbsp;
                <button type="submit" class="btn btn-success" id="btnSubmitPessoa">
                    <i class="glyphicon glyphicon-refresh"></i> Atualizar
                </button>
            </div>
        </div>
    </div>
}

<div class="" id="divPessoaFisica">

    <br />
    <h3><small>Dados de Pessoa Física</small></h3>
    <hr />
    <div id="PessoaFisicaForm">
        @{
            Html.RenderAction("PessoaFisicaFormPartial", "Pessoas", new { pessoaID = Model.PessoaID });
        }
    </div>
</div>

<div id="divPessoaJuridica">
    <br />
    <h3><small>Dados de Pessoa Jurídica</small></h3>
    <hr />
    <div id="PessoaJuridicaForm">
        @{
            Html.RenderAction("PessoaJuridicaFormPartial", "Pessoas", new { pessoaID = Model.PessoaID });
        }
    </div>
</div>

<div id="divPessoaAssociado">
    <br />
    <h3><small>Dados de Associação</small></h3>
    <hr />
    <div id="PessoaAssociadoForm">
        @{ Html.RenderAction("PessoaAssociadoFormPartial", "Pessoas", new { pessoaID = Model.PessoaID });}
    </div>
</div>

<div id="divPessoaDependentes">
    <br />
    <h3><small>Dependentes</small></h3>
    <div id="replacetargetPessoaDependentes">
        @{ Html.RenderAction("PessoaDependentesListaPartial", "Pessoas", new { pessoaID = Model.PessoaID });}
    </div>
</div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquerymaskedinput")
    @Scripts.Render("~/bundles/modalform")

    <script type="text/javascript">
        function TipoPessoa() {
            var tipoPessoa = $("#TipoPessoa").val();
            if (tipoPessoa == "FISICA") {
                $('#divPessoaFisica').fadeIn(1000);
                $('#divPessoaJuridica').fadeOut(1000);
            }
            else if (tipoPessoa == "JURIDICA") {
                $('#divPessoaFisica').fadeOut(1000);
                $('#divPessoaJuridica').fadeIn(1000);
            }
            else {
                $('#divPessoaFisica').fadeOut(1000);
                $('#divPessoaJuridica').fadeOut(1000);
            }
        }

        function PerfilRelacionamento() {

        }


        $("#TipoPessoa").change(function () {
            TipoPessoa();
        });

        $(document).ready(function () {
            TipoPessoa();
            btnAssociadoClass = $("#btn_Associado").attr("class");

            if (btnAssociadoClass == "btn btn-default") {
                $('#divPessoaAssociado').fadeOut(1000);
                $('#divPessoaDependentes').fadeOut(1000);
            }
            else {
                $('#divPessoaAssociado').fadeIn(1000);
                $('#divPessoaDependentes').fadeIn(1000);
            }


        });
    </script>

    @*data-toggle para mostrar o tooltip*@
    <script type="text/javascript">
        $('[data-toggle=tooltip]').tooltip();
    </script>

}


@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
