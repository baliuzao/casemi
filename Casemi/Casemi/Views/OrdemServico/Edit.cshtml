@model Casemi.Models.OrdemServicoEdit

@{
    ViewBag.Title = "OS[Alterar]";
}

<h3>Ordens de Serviço<br /><small>Alterar a Ordem de Serviço</small></h3>
<hr />

<!-- modal placeholder-->
<div id='myModal' class='modal fade in'>
    <div class="modal-dialog">
        <div class="modal-content">
            <div id='myModalContent'></div>
        </div>
    </div>
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OrdemServicoID)
        @Html.HiddenFor(model => model.AberturaDataHora)
        @Html.HiddenFor(model => model.AberturaUsuarioID)
        @Html.HiddenFor(model => model.Encerrada)


        <div class="form-group">
            @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Codigo, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                @Html.ValidationMessageFor(model => model.Codigo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AssociadoID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.TextBoxFor(Model => Model.AssociadoNome, new { @class = "autocomplete-with-hidden form-control", @readonly = "true", data_url = Url.Action("AutoCompleteAssociado", "OrdemServico") })
                @Html.HiddenFor(Model => Model.AssociadoID)
                @Html.ValidationMessageFor(model => model.AssociadoNome, "", new { @class = "text-danger" })
            </div>           

            @Html.LabelFor(model => model.DependenteID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.TextBoxFor(Model => Model.DependenteNome, new { @class = "dependenteAutoCompleteWithHidden form-control", @readonly = "true", data_url = Url.Action("AutoCompleteDependente", "OrdemServico") })
                @Html.HiddenFor(Model => Model.DependenteID)
                @Html.ValidationMessageFor(model => model.DependenteNome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FornecedorID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.TextBoxFor(Model => Model.FornecedorNome, new { @class = "autocomplete-with-hidden form-control", data_url = Url.Action("AutoCompleteFornecedor", "OrdemServico") })
                @Html.HiddenFor(Model => Model.FornecedorID)
                @Html.ValidationMessageFor(model => model.FornecedorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ServicoID, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.TextBoxFor(Model => Model.ServicoNome, new { @class = "autocomplete-with-hidden form-control", @readonly = "true", data_url = Url.Action("AutoCompleteServico", "OrdemServico") })
                @Html.HiddenFor(Model => Model.ServicoID)
                @Html.ValidationMessageFor(model => model.ServicoID, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.Valor, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Valor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.ValorDesconto, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.ValorDesconto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ValorDesconto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-1" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="col-md-12 text-right">
            <a href="@Url.Action("Index","OrdemServico", null)" class="btn btn-default"><i class="glyphicon glyphicon-arrow-left"></i></a>
            <button type="submit" class="btn btn-primary"><i class="glyphicon glyphicon-floppy-disk"></i> Salvar</button>
        </div>
        <hr />
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $(function () {
            $('.autocomplete-with-hidden').autocomplete({
                minLength: 0,
                source: function (request, response) {
                    var url = $(this.element).data('url');

                    $.getJSON(url, { term: request.term }, function (data) {
                        response(data);
                    })
                }
                , select: function (event, ui) {
                    $(event.target).next('input[type=hidden]').val(ui.item.id);
                }
                , change: function (event, ui) {
                    if (!ui.item) {
                        $(event.target).val('').next('input[type=hidden]').val('');
                    }
                }
            });
        })


    </script>
}
